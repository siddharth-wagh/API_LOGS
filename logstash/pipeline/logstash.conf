input {
  # TCP input for traditional logging
  tcp {
    port => 5044
    codec => json_lines
  }
  
  # HTTP input for direct API logging
  http {
    port => 8086
    codec => json
  }
}

filter {
  if [message] {
    # Try to parse JSON if message field exists
    json {
      source => "message"
      target => "parsed_log"
      skip_on_invalid_json => true
    }
  }
  
  # Add timestamp if not exists
  if ![timestamp] and [parsed_log][timestamp] {
    mutate {
      add_field => { "timestamp" => "%{[parsed_log][timestamp]}" }
    }
  }
  
  # Parse timestamp to @timestamp
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSZ" ]
      target => "@timestamp"
      remove_field => [ "timestamp" ]
    }
  }
  
  # Extract API details
  if [parsed_log][http.method] {
    mutate {
      add_field => {
        "api.method" => "%{[parsed_log][http.method]}"
        "api.path" => "%{[parsed_log][http.target]}"
      }
    }
  }
  
  # Extract tracing information if available
  if [parsed_log][context][trace_id] {
    mutate {
      add_field => {
        "trace.id" => "%{[parsed_log][context][trace_id]}"
        "span.id" => "%{[parsed_log][context][span_id]}"
      }
    }
  }
}

output {
  # Send everything to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "api-logs-%{+YYYY.MM.dd}"
  }
  
  # Debug output to console
  stdout { codec => rubydebug }
} 